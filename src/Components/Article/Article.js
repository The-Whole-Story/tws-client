import React, { useState, useEffect } from "react";
import { Container, Header, Icon } from "semantic-ui-react";
import NextArticleModal from "./NextArticleModal";
import ArticleCountModal from "./ArticleCountModal";
import Spinner from "../Spinner";
import { fetchArticlesById } from "../../API/twsApi";

function Article(props) {
  const [spinner, setSpinner] = useState(false);
  const [body, setBody] = useState([]);
  const [publishedAt, setpublishedAt] = useState("");
  const [source, setSource] = useState("");

  const [articleIndex, setArticleIndex] = useState(0);
  const [articleCount, setArticleCount] = useState(0);
  // const [articleChain, setArticleChain] = useState([]);
  const [nextArticleId, setNextArticleId] = useState("");

  const [modalNext, setModalNext] = useState(false);
  const [modalCount, setModalCount] = useState(false);

  const [vote, setVote] = useState("");

  const openModalNext = () => setModalNext(true);
  const closeModalNext = () => setModalNext(false);

  const openModalCount = () => setModalCount(true);
  const closeModalCount = () => setModalCount(false);

  const handleClickArrow = direction => {
    if (articleIndex < articleCount - 1) {
      const articleChain = JSON.parse(localStorage.getItem("articleChain"));
      setArticleIndex(
        parseInt(JSON.parse(localStorage.getItem("currentArticleIndex")))
      );
      setNextArticleId(articleChain[articleIndex + 1]);
      setVote(direction);
      openModalNext();
    } else {
      alert("you got to the end");
    }
  };
  useEffect(() => {
    const count = JSON.parse(localStorage.getItem("count"));
    // if (!count) {
    //   openModalCount();
    // }
    setArticleCount(parseInt(JSON.parse(localStorage.getItem("count"))));
    setSpinner(true);
    fetchArticlesById(props.match.params.articleId).then(article => {
      console.log("in articles : ", article);
      if (article) {
        const newBody = article[0].body;
        setBody([...newBody]);
        const publishedDateTime = article[0].publishedAt.split("T");
        setpublishedAt(publishedDateTime[0]);
        setSource(article[0].source.name);
      }
      setSpinner(false);
    });

    // if there is a count API call to recieve first article
  }, [props.match.params.articleId]);

  const renderAricle = () => {
    if (spinner) {
      return <Spinner message="Fetching your article..." />;
    }
    const newBody = body.map(paragraph => <p> {paragraph}</p>);
    return newBody;
  };

  return (
    <Container text textAlign="center">
      {console.log(props.location)}
      <Header size="huge" as="h1" style={{ fontFamily: "Playfair Display" }}>
        - {articleIndex + 1} -<Header.Subheader>{publishedAt}</Header.Subheader>
      </Header>
      <p style={{ textAlign: "left", lineHeight: "26px" }}>{renderAricle()}</p>
      <div
        style={{
          padding: "15px",
          border: "1px solid black",
          margin: "20px"
        }}
      >
        <Header style={{ fontSize: "16px" }} as="h5">
          Up or Down vote to see who wrote the article
        </Header>
        <svg
          style={{ marginRight: "50px" }}
          height="80px"
          viewBox="-4 0 511 511.99964"
          width="80px"
          xmlns="http://www.w3.org/2000/svg"
          onClick={() => handleClickArrow("Up")}
        >
          <path d="m498.429688 219.339844c-5.308594-8.015625-13.355469-13.539063-22.710938-15.632813 6.035156-11.542969 5.789062-25.945312-1.898438-37.550781-5.46875-8.261719-13.71875-13.597656-22.699218-15.617188 1.601562-3.054687 2.785156-6.351562 3.492187-9.828124 1.960938-9.667969.046875-19.519532-5.402343-27.742188-5.308594-8.019531-13.355469-13.542969-22.710938-15.632812 6.035156-11.542969 5.789062-25.945313-1.898438-37.554688-11.238281-16.972656-34.199218-21.640625-51.175781-10.398438l-36.757812 24.34375c-19.59375-9.9375-40.433594-16.988281-62.0625-21.003906-6.835938-10.378906-14.785157-20.027344-23.683594-28.652344l-15.207031-14.738281c-11.136719-10.796875-28.601563-12.417969-41.53125-3.851562-15.296875 10.128906-19.5 30.816406-9.371094 46.113281.398438.605469.789062 1.214844 1.175781 1.824219-49.847656 10.085937-95.277343 36.539062-128.902343 75.300781-36.488282 42.066406-56.585938 95.941406-56.585938 151.699219 0 10.6875.730469 21.394531 2.175781 31.816406 11.136719 81.019531 65.105469 150.839844 140.839844 182.21875 28.085937 11.640625 57.886719 17.546875 88.5625 17.546875 48.582031 0 95.085937-14.878906 134.488281-43.023438 38.546875-27.539062 67.386719-65.542968 83.40625-109.902343 1.496094-4.132813-.648437-8.699219-4.78125-10.191407-4.136718-1.492187-8.699218.648438-10.191406 4.785157-14.917969 41.308593-41.78125 76.699219-77.691406 102.351562-36.683594 26.207031-79.988282 40.058594-125.230469 40.058594-23.390625 0-46.230469-3.691406-68.089844-10.972656l64.773438-42.894531c.003906-.003907.007812-.003907.011719-.007813.003906 0 .003906-.003906.007812-.007813l53.832031-35.648437h.003907c4.832031-3.203125 8.132812-8.09375 9.289062-13.777344 1.15625-5.683593.03125-11.480469-3.171875-16.3125l-.710937-1.078125 10.457031-6.925781c7.460937-4.941406 16.433593-6.878906 25.269531-5.460937 12.792969 2.054687 25.785156-.757813 36.582031-7.910157l86.734375-57.4375c-.59375 7.523438-1.570312 15.003907-2.933594 22.359375-.804687 4.324219 2.050782 8.480469 6.375 9.28125.488282.09375.980469.136719 1.460938.136719 3.761719 0 7.105469-2.679687 7.816406-6.511719 2.207032-11.871094 3.476563-24.03125 3.804688-36.207031l24.441406-16.1875c8.222656-5.445313 13.835938-13.769531 15.796875-23.433594 1.964844-9.667969.046875-19.519531-5.398437-27.742187zm-177.21875-135.378906-24.324219 16.109374-4.789063-12.902343c-2-5.382813-4.292968-10.660157-6.832031-15.824219 12.339844 3.128906 24.355469 7.347656 35.945313 12.617188zm-252.097657 55.191406c32.316407-37.253906 76.335938-62.296875 124.492188-70.980469 7.726562 18.71875 9.578125 39.632813 4.960937 59.566406l-19.410156 83.855469c-3.050781-3.257812-7.011719-5.503906-11.472656-6.410156-5.6875-1.160156-11.480469-.03125-16.3125 3.171875l-54.980469 36.40625c-.003906 0-.003906 0-.007813.003906 0 0-.003906 0-.003906.003906l-79.296875 52.511719c-.433593-5.59375-.660156-11.230469-.660156-16.863281 0-51.921875 18.714844-102.09375 52.691406-141.265625zm207.191407 250.441406c-.308594 1.515625-1.191407 2.824219-2.484376 3.679688h.003907l-47.28125 31.308593-87.753907-130.871093c-2.449218-3.652344-7.394531-4.625-11.046874-2.175782-3.648438 2.449219-4.625 7.390625-2.175782 11.042969l87.699219 130.796875-67.496094 44.699219c-67.070312-29.335938-115.066406-91.289063-126.605469-163.378907l79.390626-52.402343 9.136718 13.632812c1.539063 2.289063 4.054688 3.527344 6.621094 3.527344 1.523438 0 3.066406-.433594 4.425781-1.347656 3.652344-2.449219 4.628907-7.394531 2.179688-11.046875l-9.074219-13.535156 48.320312-31.894532c1.285157-.855468 2.828126-1.152344 4.34375-.84375 1.515626.308594 2.824219 1.191406 3.679688 2.480469l107.273438 161.984375c.851562 1.285156 1.152343 2.828125.84375 4.34375zm211.921874-145.683594c-1.117187 5.5-4.308593 10.234375-8.988281 13.332032l-27.941406 18.503906c-.007813.003906-.015625.011718-.027344.015625l-99.730469 66.046875c-7.460937 4.941406-16.433593 6.882812-25.269531 5.460937-12.789062-2.050781-25.78125.757813-36.582031 7.910157l-10.457031 6.925781-87.859375-132.667969 22.710937-98.105469c5.847657-25.273437 2.765625-51.894531-8.375-75.085937-.101562-.242188-.210937-.476563-.335937-.707032-2.140625-4.382812-4.570313-8.636718-7.285156-12.738281-5.28125-7.976562-3.089844-18.761719 4.890624-24.046875 6.742188-4.464844 15.851563-3.621094 21.65625 2.007813l15.207032 14.742187c16.449218 15.949219 29.359375 35.730469 37.328125 57.207032l8.28125 22.308593c.015625.042969.03125.078125.046875.117188.019531.050781.042968.105469.0625.15625.058594.136719.113281.261719.171875.367187.160156.335938.335937.667969.546875.984375 2.429687 3.667969 7.367187 4.671875 11.03125 2.242188l84.910156-56.226563c9.65625-6.394531 22.714844-3.742187 29.109375 5.914063s3.742187 22.714843-5.914063 29.109375l-7.371093 4.882812s-.003907 0-.007813.003906l-16.441406 10.890626c-.023438.015624-.039062.03125-.0625.042968-.09375.066406-.183594.128906-.257812.191406-3.398438 2.496094-4.277344 7.242188-1.921876 10.796876 2.425782 3.667968 7.367188 4.671874 11.035157 2.242187l16.453125-10.898437c4.675781-3.089844 10.273437-4.179688 15.769531-3.0625 5.496094 1.117187 10.234375 4.308593 13.328125 8.988281 3.097656 4.675781 4.191406 10.28125 3.074219 15.777343-1.117188 5.5-4.308594 10.234376-8.988281 13.332032l-23.820313 15.777344c-3.667969 2.425781-4.671875 7.363281-2.242187 11.03125 1.53125 2.3125 4.0625 3.566406 6.644531 3.566406 1.507812 0 3.035156-.429688 4.386719-1.324219l3.6875-2.441406 12.757812-8.449219c9.660156-6.394531 22.714844-3.742188 29.109375 5.914062 6.394531 9.660157 3.742187 22.714844-5.914063 29.113282l-11.898437 7.878906c-.0625.039062-.125.082031-.1875.125l-11.734375 7.769531c-3.667969 2.425781-4.671875 7.367188-2.242188 11.035157 1.53125 2.3125 4.0625 3.566406 6.644532 3.566406 1.507812 0 3.035156-.429688 4.386718-1.324219l3.6875-2.441406s0-.003907.003907-.003907l12.757812-8.445312c4.675781-3.097656 10.277344-4.191406 15.777344-3.070312 5.5 1.113281 10.234375 4.308593 13.332031 8.984374 3.09375 4.675782 4.183594 10.28125 3.066406 15.777344zm0 0" />
        </svg>
        {/* <Icon
          style={{ "font-size": 42 }}
          onClick={() => handleClickArrow("Up")}
          name="thumbs down outline"
        /> */}
        <svg
          height="80px"
          viewBox="-6 0 511 511.997"
          width="80px"
          xmlns="http://www.w3.org/2000/svg"
          onClick={() => handleClickArrow("Down")}
        >
          <path d="m498.441406 205.023438c.234375-.953126.308594-1.953126.171875-2.960938-1.25-9.09375-3.066406-18.179688-5.394531-27.011719-.019531-.09375-.042969-.1875-.066406-.28125-.003906-.019531-.011719-.039062-.015625-.058593-.003907-.015626-.007813-.03125-.011719-.046876-.003906-.015624-.007812-.027343-.011719-.042968 0-.003906 0-.007813 0-.007813-12.085937-48.976562-40.617187-93.316406-80.34375-124.863281-40.992187-32.546875-90.382812-49.75-142.832031-49.75-61.390625 0-119.109375 23.90625-162.519531 67.316406-42.996094 42.996094-66.847657 100.035156-67.296875 160.78125l-23.207032 15.367188c-10.28125 6.804687-16.414062 18.234375-16.414062 30.574218 0 7.199219 2.105469 14.191407 6.09375 20.222657 5.433594 8.199219 13.621094 13.488281 22.539062 15.484375-2.726562 5.183594-4.214843 11.023437-4.214843 17.085937 0 7.203125 2.109375 14.195313 6.097656 20.207031 5.421875 8.191407 13.617187 13.484376 22.542969 15.484376-2.730469 5.1875-4.21875 11.03125-4.21875 17.097656 0 7.195312 2.105468 14.183594 6.09375 20.210937 5.425781 8.1875 13.621094 13.476563 22.542968 15.472657-2.726562 5.183593-4.21875 11.027343-4.21875 17.089843 0 7.207031 2.117188 14.199219 6.109376 20.21875 5.40625 8.160157 13.664062 13.726563 23.257812 15.675781 2.453125.496094 4.921875.742188 7.371094.742188 7.117187 0 14.085937-2.082031 20.15625-6.101562l39.351562-26.058594c3.957032 1.917968 7.992188 3.730468 12.035156 5.402344 14.171876 5.875 28.972657 10.296874 44.042969 13.207031 7.335938 11.878906 16.109375 22.835937 26.15625 32.574219l15.089844 14.628906c6.210937 6.007812 14.375 9.3125 22.996094 9.3125 6.488281 0 12.789062-1.898438 18.226562-5.496094 9.257813-6.132812 14.789063-16.429688 14.789063-27.542969 0-6.503906-1.902344-12.804687-5.492188-18.207031-1.164062-1.765625-2.257812-3.582031-3.304687-5.417969 71.230469-13.984375 131.703125-60.816406 163.136719-127.003906 1.871093-3.941406.195312-8.65625-3.746094-10.527344-3.941406-1.871093-8.65625-.195312-10.527344 3.746094-29.839844 62.832031-87.753906 106.945313-155.742188 119.015625-6.453124-17.636719-7.714843-37.078125-3.46875-55.398438l19.261719-83.226562c3.027344 3.238281 6.960938 5.46875 11.390625 6.371094 1.449219.292968 2.902344.441406 4.347656.441406 4.183594 0 8.277344-1.226562 11.84375-3.589844l132.585938-87.8125c.242188 4.15625.367188 8.328125.367188 12.496094 0 19.753906-2.691407 39.320312-7.992188 58.148438-1.183594 4.199218 1.261719 8.5625 5.460938 9.746093.71875.203125 1.4375.296875 2.148437.296875 3.449219 0 6.617187-2.273437 7.601563-5.757812 5.695312-20.222656 8.582031-41.226563 8.582031-62.433594 0-8.308594-.46875-16.644531-1.351563-24.820312zm-95.046875 46.511718-113.789062-169.703125 67.019531-44.378906c59.382812 25.996094 104.507812 78.417969 121.160156 141.019531.003906.019532.011719.042969.015625.0625.011719.050782.019531.097656.03125.144532 1.691407 6.871093 3.023438 13.875 4.011719 20.898437zm-217.863281 175.054688 21.085938-13.964844 4.753906 12.808594c1.460937 3.933594 3.078125 7.816406 4.832031 11.640625-9.578125-2.476563-18.988281-5.613281-28.117187-9.398438-.851563-.351562-1.703126-.722656-2.554688-1.085937zm103.265625-44.988282c-5.464844 23.59375-3.105469 48.800782 6.648437 70.96875.003907.003907.003907.007813.007813.015626.015625.039062.035156.078124.054687.117187 2.558594 5.792969 5.636719 11.433594 9.164063 16.777344 1.875 2.820312 2.863281 6.097656 2.863281 9.480469 0 5.796874-2.882812 11.167968-7.710937 14.367187-2.835938 1.875-6.125 2.871094-9.503907 2.871094-4.496093 0-8.757812-1.730469-12-4.863281l-15.082031-14.621094c-9.898437-9.597656-18.453125-20.480469-25.429687-32.339844-.0625-.105469-.128906-.210938-.191406-.3125-4.484376-7.664062-8.328126-15.78125-11.433594-24.128906l-8.214844-22.144532c-1.519531-4.089843-6.0625-6.175781-10.15625-4.660156-.085938.03125-.164062.074219-.246094.105469-.269531.074219-.632812.253906-1.109375.554687-.054687.03125-.105469.066407-.160156.097657-.035156.023437-.0625.039062-.101563.0625l-84.269531 55.808593c-4.640625 3.070313-10.199219 4.15625-15.65625 3.046876-5.457031-1.109376-10.152343-4.273438-13.230469-8.921876-2.277343-3.425781-3.476562-7.398437-3.476562-11.484374 0-7.019532 3.492188-13.527344 9.34375-17.402344l7.195312-4.757813c0-.003906.003907-.003906.007813-.007812.039063-.027344.082031-.054688.121094-.082031l16.320312-10.808594c3.636719-2.410156 4.632813-7.3125 2.222657-10.949219-2.410157-3.636719-7.3125-4.632813-10.949219-2.226563l-16.429688 10.882813c-9.574219 6.246094-22.472656 3.589844-28.78125-5.9375-2.269531-3.429687-3.472656-7.398437-3.472656-11.480469 0-7.03125 3.496094-13.539062 9.347656-17.410156l23.636719-15.65625c3.636719-2.40625 4.640625-7.304688 2.234375-10.949219-2.40625-3.636719-7.308594-4.636719-10.949219-2.234375l-16.421875 10.875c-9.574219 6.257813-22.484375 3.601563-28.796875-5.941406-2.269531-3.421875-3.46875-7.390625-3.46875-11.476562 0-7.027344 3.488282-13.53125 9.339844-17.40625l23.640625-15.660157c3.640625-2.40625 4.640625-7.304687 2.234375-10.945312-2.402344-3.640625-7.308594-4.640625-10.949219-2.234375l-16.335937 10.808594c-9.578125 6.34375-22.535156 3.714843-28.878906-5.863282-2.273438-3.429687-3.472657-7.40625-3.472657-11.496094 0-7.023437 3.492188-13.527343 9.335938-17.398437l57.375-37.992187c3.640625-2.410157 4.636719-7.3125 2.226562-10.953126-2.410156-3.636718-7.316406-4.632812-10.949219-2.222656l-18.015624 11.925782c6.46875-112.25 99.824218-201.597657 213.664062-201.597657 25 0 49.246094 4.207031 72.085938 12.367188l-121.257813 80.296875c-9.890625 6.570312-12.609375 19.964844-6.058594 29.863281l.703125 1.0625-10.367187 6.875c-5.8125 3.839844-12.554688 5.875-19.496094 5.875-1.878906 0-3.753906-.152344-5.59375-.449219-12.6875-2.035156-25.578125.75-36.304687 7.851563l-41.160157 27.257812c-3.636719 2.410157-4.632812 7.308594-2.222656 10.949219 1.519531 2.296875 4.03125 3.539062 6.59375 3.539062 1.5 0 3.011719-.425781 4.355469-1.3125l41.160156-27.257812c7.410156-4.902344 16.316406-6.828125 25.0625-5.425781 2.660156.429687 5.386719.648437 8.109375.648437 10.050781 0 19.804687-2.9375 28.21875-8.5l10.371094-6.871094 87.199219 131.660157zm53.511719-89.609374c-1.273438.84375-2.804688 1.140624-4.304688.832031-1.507812-.304688-2.800781-1.179688-3.652344-2.464844l-101.382812-153.078125c-.007812-.011719-.011719-.023438-.019531-.03125-.007813-.011719-.015625-.019531-.023438-.03125l-5.042969-7.613281c-1.746093-2.640625-1.015624-6.222657 1.617188-7.972657l46.929688-31.074218 113.789062 169.703125zm0 0" />
        </svg>
        {/* <Icon
          style={{ "font-size": 42, marginLeft: "30px" }}
          onClick={() => handleClickArrow("Down")}
          name="thumbs up outline"
        /> */}
      </div>

      <NextArticleModal
        setArticleIndex={setArticleIndex}
        articleIndex={articleIndex}
        articleCount={articleCount}
        nextArticleId={nextArticleId}
        source={source}
        vote={vote}
        modal={modalNext}
        closeModal={closeModalNext}
      />
      <ArticleCountModal
        setArticleCount={setArticleCount}
        articleCount={articleCount}
        header="How many articles to get the whole story?"
        description="To continue please enter the number of articles you would like to be served"
        modal={modalCount}
        closeModal={closeModalCount}
      />
    </Container>
  );
}

export default Article;
